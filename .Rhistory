library(QOLpackage)
set.seed(115)
# Data Simulation
q <- matrix(data = 0,nrow = 100,ncol = 30)
id <- seq(1,100,1)
for(j in 1:28){
for(i in 1:100){
repeat{
u <- rpois(n = 1,lambda = 2.5)
if(u>=1 & u<=4){
q[i,j] <- u
break
}
}
}
}
for(j in 29:30){
for(i in 1:100){
repeat{
u <- rpois(n = 1,lambda = 2.5)
if(u>=1 & u<=7){
q[i,j] <- u
break
}
}
}
}
sim_x <- data.frame('ID'=id,'Q1'=x[,1],'Q2'=x[,2],'Q3'=x[,3],'Q4'=x[,4],'Q5'=x[,5],'Q6'=x[,6],'Q7'=x[,7],'Q8'=x[,8],'Q9'=x[,9],'Q10'=x[,10],
'Q11'=x[,11],'Q12'=x[,12],'Q13'=x[,13],'Q14'=x[,14],'Q15'=x[,15],'Q16'=x[,16],'Q17'=x[,17],'Q18'=x[,18],'Q19'=x[,19],'Q20'=x[,20],
'Q21'=x[,21],'Q22'=x[,22],'Q23'=x[,23],'Q24'=x[,24],'Q25'=x[,25],'Q26'=x[,26],'Q27'=x[,27],'Q28'=x[,28],'Q29'=x[,29],'Q30'=x[,30])
write.csv(sim_x,file = 'Data.csv',row.names = FALSE)
set.seed(115)
# Data Simulation
x <- matrix(data = 0,nrow = 100,ncol = 30)
id <- seq(1,100,1)
for(j in 1:28){
for(i in 1:100){
repeat{
u <- rpois(n = 1,lambda = 2.5)
if(u>=1 & u<=4){
x[i,j] <- u
break
}
}
}
}
for(j in 29:30){
for(i in 1:100){
repeat{
u <- rpois(n = 1,lambda = 2.5)
if(u>=1 & u<=7){
x[i,j] <- u
break
}
}
}
}
sim_x <- data.frame('ID'=id,'Q1'=x[,1],'Q2'=x[,2],'Q3'=x[,3],'Q4'=x[,4],'Q5'=x[,5],'Q6'=x[,6],'Q7'=x[,7],'Q8'=x[,8],'Q9'=x[,9],'Q10'=x[,10],
'Q11'=x[,11],'Q12'=x[,12],'Q13'=x[,13],'Q14'=x[,14],'Q15'=x[,15],'Q16'=x[,16],'Q17'=x[,17],'Q18'=x[,18],'Q19'=x[,19],'Q20'=x[,20],
'Q21'=x[,21],'Q22'=x[,22],'Q23'=x[,23],'Q24'=x[,24],'Q25'=x[,25],'Q26'=x[,26],'Q27'=x[,27],'Q28'=x[,28],'Q29'=x[,29],'Q30'=x[,30])
write.csv(sim_x,file = 'Data.csv',row.names = FALSE)
write.csv(x = sim_x,file = 'Data.csv',row.names = FALSE)
write.csv(x = sim_x,file = 'Data.csv',row.names = FALSE)
# Quality of Life
#
#
#'@aliases qol
# This is a function named 'qol' which takes into the QOL dataset and
# provides the output of a dataset containing the score values.
#
# Installation of Package :-
# ---------------------------
# install.packages("QOLpackage")
# library(QOLpackage)
#
# Input :-
# ---------
# Data frame (containing the answers of QOL questionnaire)
#'@param y A dataframe
#
# Output :-
# ----------
# Data frame by replacing the questions data with scores
#'@return A dataframe replacing the questions data in \code{y} with scale scores
#
# Examples :-
# ------------
#'@example
#'qol(sim_x)
#
qol <- function(y){
d <- as.matrix(y[,c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',
'Q11','Q12','Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20',
'Q21','Q22','Q23','Q24','Q25','Q26','Q27','Q28','Q29','Q30')])
# Raw Score
RS <- function(a){
rs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
rs[i,] <- mean(a[i,])
}
return(rs)
}
# Functional Scales Score
FS <- function(a,b){
fs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
z <- (a[i]-1)/diff(range(b))
fs[i,] <- (1-z)*100
}
return(fs)
}
# Symptoms Scales & Global Scales Score
SS_GS <- function(a,b){
ss_gs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
ss_gs[i,] <- ((a[i]-1)/diff(range(b)))*100
}
return(ss_gs)
}
# Dataset with Raw Scores
RS_data <- data.frame(RS_QL = RS(d[,c(29,30)]),
RS_PF = RS(d[,1:5]),
RS_RF = RS(d[,c(6,7)]),
RS_EF = RS(d[,21:24]),
RS_CF = RS(d[,c(20,25)]),
RS_SF = RS(d[,c(26,27)]),
RS_FA = RS(d[,c(10,12,18)]),
RS_NV = RS(d[,c(14,15)]),
RS_PA = RS(d[,c(9,19)]),
RS_DY = d[,8],
RS_SL = d[,11],
RS_AP = d[,13],
RS_CO = d[,16],
RS_DI = d[,17],
RS_FI = d[,28])
# Dataset with Score Values
score_data <- data.frame(QL = SS_GS(RS_data$RS_QL,d[,c(29,30)]),
PF = FS(RS_data$RS_PF,d[,1:5]),
RF = FS(RS_data$RS_RF,d[,c(6,7)]),
EF = FS(RS_data$RS_EF,d[,21:24]),
CF = FS(RS_data$RS_CF,d[,c(20,25)]),
SF = FS(RS_data$RS_SF,d[,c(26,27)]),
FA = SS_GS(RS_data$RS_FA,d[,c(10,12,18)]),
NV = SS_GS(RS_data$RS_NV,d[,c(14,15)]),
PA = SS_GS(RS_data$RS_PA,d[,c(9,19)]),
DY = SS_GS(RS_data$RS_DY,d[,8]),
SL = SS_GS(RS_data$RS_SL,d[,11]),
AP = SS_GS(RS_data$RS_AP,d[,13]),
CO = SS_GS(RS_data$RS_CO,d[,16]),
DI = SS_GS(RS_data$RS_DI,d[,17]),
FI = SS_GS(RS_data$RS_FI,d[,28]))
new_data <- y[,-c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',
'Q11','Q12','Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20',
'Q21','Q22','Q23','Q24','Q25','Q26','Q27','Q28','Q29','Q30')]
final_data <- data.frame(new_data,score_data)
return(final_data)
}
library(QOLpackage)
qol(sim_x)
qol <- function(y){
d <- as.matrix(y[,c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',
'Q11','Q12','Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20',
'Q21','Q22','Q23','Q24','Q25','Q26','Q27','Q28','Q29','Q30')])
# Raw Score
RS <- function(a){
rs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
rs[i,] <- mean(a[i,])
}
return(rs)
}
# Functional Scales Score
FS <- function(a,b){
fs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
z <- (a[i]-1)/diff(range(b))
fs[i,] <- (1-z)*100
}
return(fs)
}
# Symptoms Scales & Global Scales Score
SS_GS <- function(a,b){
ss_gs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
ss_gs[i,] <- ((a[i]-1)/diff(range(b)))*100
}
return(ss_gs)
}
# Dataset with Raw Scores
RS_data <- data.frame(RS_QL = RS(d[,c(29,30)]),
RS_PF = RS(d[,1:5]),
RS_RF = RS(d[,c(6,7)]),
RS_EF = RS(d[,21:24]),
RS_CF = RS(d[,c(20,25)]),
RS_SF = RS(d[,c(26,27)]),
RS_FA = RS(d[,c(10,12,18)]),
RS_NV = RS(d[,c(14,15)]),
RS_PA = RS(d[,c(9,19)]),
RS_DY = d[,8],
RS_SL = d[,11],
RS_AP = d[,13],
RS_CO = d[,16],
RS_DI = d[,17],
RS_FI = d[,28])
# Dataset with Score Values
score_data <- data.frame(QL = SS_GS(RS_data$RS_QL,d[,c(29,30)]),
PF = FS(RS_data$RS_PF,d[,1:5]),
RF = FS(RS_data$RS_RF,d[,c(6,7)]),
EF = FS(RS_data$RS_EF,d[,21:24]),
CF = FS(RS_data$RS_CF,d[,c(20,25)]),
SF = FS(RS_data$RS_SF,d[,c(26,27)]),
FA = SS_GS(RS_data$RS_FA,d[,c(10,12,18)]),
NV = SS_GS(RS_data$RS_NV,d[,c(14,15)]),
PA = SS_GS(RS_data$RS_PA,d[,c(9,19)]),
DY = SS_GS(RS_data$RS_DY,d[,8]),
SL = SS_GS(RS_data$RS_SL,d[,11]),
AP = SS_GS(RS_data$RS_AP,d[,13]),
CO = SS_GS(RS_data$RS_CO,d[,16]),
DI = SS_GS(RS_data$RS_DI,d[,17]),
FI = SS_GS(RS_data$RS_FI,d[,28]))
new_data <- y[,-c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',
'Q11','Q12','Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20',
'Q21','Q22','Q23','Q24','Q25','Q26','Q27','Q28','Q29','Q30')]
final_data <- data.frame(new_data,score_data)
return(final_data)
}
sim_x
qol(sim_x)
qol <- function(y){
d <- data.frame(y[,c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',
'Q11','Q12','Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20',
'Q21','Q22','Q23','Q24','Q25','Q26','Q27','Q28','Q29','Q30')])
# Raw Score
RS <- function(a){
rs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
rs[i,] <- mean(a[i,])
}
return(rs)
}
# Functional Scales Score
FS <- function(a,b){
fs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
z <- (a[i]-1)/diff(range(b))
fs[i,] <- (1-z)*100
}
return(fs)
}
# Symptoms Scales & Global Scales Score
SS_GS <- function(a,b){
ss_gs <- matrix(data = 0,nrow = 100,ncol = 1)
for(i in 1:100){
ss_gs[i,] <- ((a[i]-1)/diff(range(b)))*100
}
return(ss_gs)
}
# Dataset with Raw Scores
RS_data <- data.frame(RS_QL = RS(d[,c(29,30)]),
RS_PF = RS(d[,1:5]),
RS_RF = RS(d[,c(6,7)]),
RS_EF = RS(d[,21:24]),
RS_CF = RS(d[,c(20,25)]),
RS_SF = RS(d[,c(26,27)]),
RS_FA = RS(d[,c(10,12,18)]),
RS_NV = RS(d[,c(14,15)]),
RS_PA = RS(d[,c(9,19)]),
RS_DY = d[,8],
RS_SL = d[,11],
RS_AP = d[,13],
RS_CO = d[,16],
RS_DI = d[,17],
RS_FI = d[,28])
# Dataset with Score Values
score_data <- data.frame(QL = SS_GS(RS_data$RS_QL,d[,c(29,30)]),
PF = FS(RS_data$RS_PF,d[,1:5]),
RF = FS(RS_data$RS_RF,d[,c(6,7)]),
EF = FS(RS_data$RS_EF,d[,21:24]),
CF = FS(RS_data$RS_CF,d[,c(20,25)]),
SF = FS(RS_data$RS_SF,d[,c(26,27)]),
FA = SS_GS(RS_data$RS_FA,d[,c(10,12,18)]),
NV = SS_GS(RS_data$RS_NV,d[,c(14,15)]),
PA = SS_GS(RS_data$RS_PA,d[,c(9,19)]),
DY = SS_GS(RS_data$RS_DY,d[,8]),
SL = SS_GS(RS_data$RS_SL,d[,11]),
AP = SS_GS(RS_data$RS_AP,d[,13]),
CO = SS_GS(RS_data$RS_CO,d[,16]),
DI = SS_GS(RS_data$RS_DI,d[,17]),
FI = SS_GS(RS_data$RS_FI,d[,28]))
new_data <- y[,-c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8','Q9','Q10',
'Q11','Q12','Q13','Q14','Q15','Q16','Q17','Q18','Q19','Q20',
'Q21','Q22','Q23','Q24','Q25','Q26','Q27','Q28','Q29','Q30')]
final_data <- data.frame(new_data,score_data)
return(final_data)
}
qol(sim_x)
library(QOLpackage)
ID<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100)
Q1<-c(3,1,3,1,3,2,2,2,3,1,4,4,2,4,2,3,3,2,2,2,2,3,3,1,2,1,1,2,1,3,2,4,1,2,3,1,4,3,1,1,1,3,3,3,4,2,2,1,4,1,2,2,3,1,4,2,3,1,2,2,2,1,4,1,3,4,1,4,3,2,3,2,1,4,4,1,2,2,3,1,1,3,1,2,1,3,2,1,3,3,4,2,4,2,1,4,1,2,4,4)
Q2<-c(1,3,3,4,4,1,1,1,4,3,2,3,3,4,3,2,2,1,4,2,2,2,2,1,2,1,1,1,3,1,1,4,3,2,3,1,1,1,3,2,3,3,2,2,3,2,4,4,3,3,3,4,3,3,3,2,3,3,4,3,4,3,3,2,2,4,1,3,4,4,2,3,3,2,3,4,2,3,2,3,2,2,1,2,2,4,3,2,1,1,2,3,2,3,1,1,1,1,1,4)
Q3<-c(3,3,1,3,3,1,2,4,1,3,3,3,4,3,3,2,4,2,2,1,4,1,1,3,2,2,2,4,2,1,2,1,3,1,1,2,4,3,3,1,1,1,1,3,2,3,3,3,1,3,2,3,1,3,1,2,1,1,2,3,2,3,1,2,1,4,1,2,2,2,2,3,1,4,4,1,3,2,3,2,3,4,4,3,2,1,3,4,4,3,3,2,4,2,3,4,4,4,2,4)
Q4<-c(4,4,2,1,4,3,2,3,3,4,3,2,1,2,2,4,3,2,3,4,2,1,1,4,2,3,2,2,3,1,4,3,1,4,3,3,3,4,1,2,3,2,2,3,1,2,2,2,3,4,3,2,2,4,3,4,4,2,4,3,3,2,1,3,4,1,3,2,2,3,2,4,2,3,2,1,4,1,2,4,3,1,2,1,3,1,2,4,1,3,1,3,1,3,1,4,3,1,1,1)
Q5<-c(2,3,3,2,1,2,3,2,1,1,3,1,1,2,3,3,2,2,4,3,2,4,1,2,4,2,3,2,3,2,3,2,1,2,2,3,3,3,3,3,1,1,2,4,4,4,3,3,4,2,1,3,4,3,3,1,3,2,4,2,2,3,2,2,2,3,2,3,1,1,2,2,3,1,3,2,4,3,1,3,1,2,4,1,3,2,2,2,1,2,2,2,1,2,4,3,1,2,1,2)
Q6<-c(3,4,2,4,2,4,2,3,4,2,2,2,2,1,3,1,1,1,2,2,2,2,2,3,2,3,1,3,1,3,2,2,3,2,3,1,1,1,2,1,1,1,3,3,2,4,4,2,3,2,4,3,4,2,2,2,3,2,2,3,2,2,2,2,2,2,2,3,1,4,1,1,4,2,1,2,2,2,2,1,4,2,2,2,4,1,3,1,2,1,3,4,2,2,2,3,2,3,1,2)
Q7<-c(2,1,3,2,2,3,1,3,4,3,3,2,4,1,2,1,1,3,2,4,4,3,3,3,1,2,3,2,4,2,2,2,4,1,4,4,3,2,2,4,2,3,1,1,1,1,2,3,3,4,4,2,1,2,2,3,2,2,1,1,3,2,1,2,3,3,1,3,1,1,1,3,2,1,3,2,3,3,3,1,2,3,4,3,2,2,1,2,3,1,2,2,3,3,2,2,2,2,2,1)
Q8<-c(1,3,2,3,4,1,4,1,3,3,3,2,1,3,3,1,4,3,1,3,1,3,2,1,4,3,1,3,1,4,1,4,2,3,1,2,3,3,1,2,4,2,2,4,1,3,2,3,1,3,2,2,2,2,4,3,2,2,3,4,1,4,2,3,2,2,1,4,3,1,4,1,3,1,2,4,4,4,2,2,1,1,1,1,2,2,2,2,3,2,3,4,3,2,1,2,3,3,3,3)
Q9<-c(3,4,3,2,2,1,2,1,3,4,2,1,1,3,1,1,1,1,2,3,1,4,2,3,4,2,4,1,3,2,4,3,1,3,4,3,3,3,4,4,2,4,1,3,4,3,1,4,1,3,1,1,4,3,3,1,2,1,2,3,1,1,1,4,4,1,4,2,3,1,2,2,4,1,4,3,2,1,3,2,1,3,4,3,3,2,3,4,2,2,1,2,4,2,2,2,4,3,4,2)
Q10<-c(2,2,4,2,2,1,2,2,4,4,2,1,3,3,2,1,2,1,1,4,3,4,1,4,1,2,4,1,4,2,3,1,4,4,2,3,2,3,2,3,2,3,1,4,3,3,3,3,3,1,3,1,4,4,1,3,2,3,3,3,1,2,1,1,1,1,1,1,4,3,1,4,2,3,1,1,2,4,2,2,3,3,2,4,3,4,1,2,1,3,2,3,4,2,2,3,2,4,2,1)
Q11<-c(1,1,3,1,3,3,3,1,3,1,1,2,3,4,4,3,1,2,1,2,2,2,1,3,2,1,3,3,2,1,1,4,2,4,4,2,3,1,1,1,2,1,1,2,4,3,3,4,3,2,3,3,2,1,1,2,1,2,1,2,3,3,1,2,2,3,2,1,4,1,1,4,4,1,2,2,1,1,2,2,1,2,2,1,3,1,3,2,1,3,2,4,3,1,1,3,2,4,1,3)
Q12<-c(4,3,1,1,3,4,2,4,3,2,1,3,2,3,2,3,3,2,3,3,1,3,1,1,1,2,2,2,2,3,3,4,3,2,1,1,3,2,1,4,2,1,2,3,2,2,3,3,4,4,2,1,4,2,1,3,2,1,2,4,3,3,2,2,4,1,1,4,1,4,3,4,3,4,2,4,3,1,2,2,3,3,1,1,1,4,3,4,3,4,1,4,1,4,2,3,2,4,4,2)
Q13<-c(2,2,3,2,2,1,4,4,3,3,3,1,4,4,1,3,1,1,2,3,2,3,3,1,3,3,3,1,2,4,1,2,2,2,1,3,3,4,2,1,2,4,3,2,3,1,3,3,1,3,3,4,1,3,3,1,3,2,2,4,1,4,1,2,3,3,1,2,4,1,2,3,4,3,2,4,2,1,4,4,2,4,4,2,1,4,3,2,1,2,3,1,3,2,3,2,2,4,4,2)
Q14<-c(1,1,3,1,3,4,3,3,2,2,3,1,2,2,1,3,4,3,2,3,3,2,3,2,1,2,4,1,1,4,4,2,2,1,1,3,3,1,2,3,1,4,1,2,4,1,2,2,2,2,1,4,3,2,3,4,3,1,2,2,4,3,1,2,4,4,2,3,2,1,3,4,3,3,2,3,4,2,3,2,2,2,3,3,4,4,1,3,3,3,1,1,2,3,3,3,2,4,1,1)
Q15<-c(1,2,2,1,2,1,4,1,2,2,1,3,3,2,4,4,4,4,1,1,4,2,2,4,1,3,2,1,2,2,1,2,2,2,2,3,2,1,3,1,3,1,4,3,3,1,1,1,4,3,2,3,2,3,1,1,1,1,2,4,4,4,1,2,1,3,3,1,4,3,1,4,1,1,2,2,2,2,2,4,3,4,3,2,3,1,4,2,1,4,1,2,4,2,1,3,2,2,2,4)
Q16<-c(2,1,3,1,1,2,3,1,2,1,1,2,2,1,3,2,1,2,1,2,3,3,2,2,4,3,2,2,3,3,4,2,2,2,1,3,3,1,1,2,1,3,1,2,4,1,2,3,4,1,3,2,1,1,1,3,1,2,1,2,4,2,1,2,4,3,2,2,3,1,1,3,3,3,2,1,1,1,3,4,2,2,4,4,1,1,1,3,3,1,1,3,2,3,3,3,3,1,2,4)
Q17<-c(4,2,2,3,4,4,1,1,1,2,4,2,2,1,2,2,2,4,2,2,2,1,1,1,3,4,3,3,1,3,2,3,4,2,1,1,3,2,1,2,2,3,2,1,2,4,2,2,1,1,3,1,4,2,4,2,2,4,4,2,3,2,4,4,3,3,3,1,3,3,4,1,4,3,1,2,3,2,4,4,1,2,3,3,4,1,3,3,1,3,3,1,1,2,3,4,3,4,1,2)
Q18<-c(1,3,1,1,2,4,2,4,2,1,3,3,1,1,1,2,3,1,3,2,3,3,2,1,4,1,1,2,3,2,1,4,1,2,2,2,3,1,1,2,1,2,2,4,3,2,2,2,2,1,4,3,2,1,2,4,1,2,2,3,1,2,2,2,2,3,2,2,3,4,1,4,2,2,4,2,3,1,3,1,1,2,2,1,1,2,1,1,2,3,4,3,3,2,2,2,2,3,2,2)
Q19<-c(1,3,1,3,4,2,2,2,1,2,4,1,2,1,2,1,4,3,4,2,4,1,1,1,2,1,2,2,1,3,2,1,2,3,1,2,1,3,1,2,2,4,1,3,2,4,2,3,1,2,1,3,1,4,1,3,2,3,4,4,2,4,4,1,3,2,1,3,1,2,2,3,1,2,2,2,2,2,2,1,4,4,2,2,3,4,1,2,4,1,1,3,2,4,2,3,1,1,1,3)
Q20<-c(1,3,2,2,1,1,1,3,3,1,3,2,1,4,1,3,2,1,2,1,2,3,3,4,2,4,4,1,4,2,1,3,2,3,1,3,2,1,2,3,3,4,2,2,2,4,1,4,3,1,3,3,3,4,4,1,2,2,2,1,1,3,2,3,1,2,4,2,3,2,3,3,1,3,2,1,3,2,3,3,4,1,2,1,2,4,3,1,2,4,2,3,2,1,2,3,1,4,2,4)
Q21<-c(2,4,4,3,2,3,3,4,2,1,3,3,3,3,2,1,2,3,2,1,1,3,1,4,3,4,2,1,2,2,4,2,4,1,3,1,2,2,1,3,2,2,1,1,4,1,4,4,1,3,2,3,2,4,4,3,3,2,2,4,1,1,3,2,2,3,3,1,2,4,2,3,3,1,3,2,3,4,2,3,4,1,4,2,3,4,4,2,2,1,2,2,4,3,2,2,2,2,3,2)
Q22<-c(2,4,2,2,3,3,2,2,1,2,3,3,3,1,1,1,4,2,3,3,1,4,4,2,2,1,1,2,3,2,1,1,3,4,1,1,2,4,3,3,3,4,2,2,2,3,4,2,1,2,1,1,3,3,1,2,1,1,2,1,1,1,2,4,3,3,4,3,2,1,3,3,2,2,3,2,3,3,3,2,1,2,3,1,2,4,1,1,2,3,2,2,3,1,1,2,3,1,4,4)
Q23<-c(4,1,4,2,1,3,2,1,3,1,4,3,4,3,3,2,2,4,2,4,4,2,4,4,2,3,2,4,3,3,1,2,2,3,3,2,3,2,4,4,1,2,2,4,3,2,1,4,1,1,2,1,3,3,3,1,2,1,3,2,1,3,3,3,2,1,1,2,3,2,4,2,1,1,3,1,3,2,2,1,4,1,3,3,1,3,2,3,3,3,4,4,3,3,2,4,1,3,4,3)
Q24<-c(1,1,1,4,2,3,3,2,3,1,2,3,1,4,2,4,4,3,2,3,2,3,1,4,3,1,3,3,3,1,2,2,3,2,1,2,2,4,4,4,1,3,1,3,4,2,3,1,1,4,1,3,2,4,1,3,3,3,1,1,3,3,2,1,1,2,1,3,3,4,4,1,3,3,1,2,2,1,4,2,3,2,2,1,1,2,1,2,3,3,4,4,1,2,3,3,3,2,3,3)
Q25<-c(3,2,3,1,2,2,3,3,1,2,2,3,2,1,1,1,3,3,3,3,2,2,3,2,1,3,1,3,1,1,4,1,3,3,2,3,1,3,2,4,3,4,1,1,1,4,2,1,2,1,3,2,2,1,1,3,3,1,2,2,3,2,2,3,3,1,2,4,3,1,1,2,2,1,1,2,3,3,1,1,1,1,3,1,4,3,4,1,4,4,2,2,3,1,2,2,2,1,3,2)
Q26<-c(1,3,2,1,3,3,1,1,3,3,2,3,1,2,1,3,3,2,3,1,3,4,3,4,1,3,3,1,4,2,3,3,1,1,2,3,1,2,2,4,1,2,2,3,1,2,1,3,4,3,1,2,3,1,4,4,4,4,2,2,2,2,3,1,3,3,2,2,2,4,3,1,2,2,3,1,3,4,1,3,2,1,2,2,3,2,3,2,4,1,3,1,3,3,1,2,3,1,3,3)
Q27<-c(1,3,3,4,2,4,2,3,2,3,2,1,2,1,2,4,4,2,3,3,3,3,2,2,3,4,1,2,2,2,1,4,4,4,4,2,2,3,2,1,4,2,4,3,4,4,1,2,2,2,1,1,2,3,3,3,2,2,2,4,4,3,4,1,2,3,2,1,3,4,2,1,2,3,2,2,2,2,2,3,3,3,1,2,1,2,3,3,3,4,1,1,3,1,1,1,2,2,3,2)
Q28<-c(4,4,2,3,3,2,1,2,2,3,2,2,3,4,1,2,2,2,3,3,4,4,1,3,2,2,3,3,4,2,1,3,2,1,2,3,3,2,1,4,2,4,3,2,2,1,2,3,2,3,4,2,3,1,1,1,2,3,3,2,1,2,4,3,2,4,4,4,3,3,3,3,1,4,2,2,1,1,1,1,3,2,4,4,3,4,2,4,3,1,1,2,1,3,3,1,2,2,2,2)
Q29<-c(1,3,2,3,6,2,4,2,4,3,3,2,2,3,2,4,1,3,2,1,3,2,6,2,1,3,2,3,2,2,1,2,5,6,3,4,5,2,1,3,1,2,2,2,2,3,2,5,1,1,2,6,1,4,1,1,4,5,2,2,3,2,5,6,2,4,5,2,7,3,1,4,1,2,2,4,4,1,2,3,1,5,4,2,3,1,4,3,2,3,2,2,3,3,1,3,4,1,2,6)
Q30<-c(2,1,1,1,4,3,7,2,3,2,3,2,3,6,3,1,4,2,3,2,2,7,2,3,1,2,1,1,2,2,2,2,1,3,4,3,3,1,2,2,4,2,5,1,2,2,3,5,1,2,2,3,3,2,1,2,1,5,5,1,1,2,4,3,2,2,3,3,2,4,2,3,4,2,1,2,4,4,3,2,3,1,1,3,2,2,3,3,5,1,2,3,3,2,1,2,7,4,1,4)
sim_x <- data.frame(ID,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30)
usethis::use_data(sim_x, compress = "xz",overwrite=TRUE)
data("sim_x")
sim_x
install.packages("Rdpack")
install.packages("C:/Users/user/Downloads/QOL_0.1.0.zip", repos = NULL, type = "win.binary")
data("sim_x")
library(QOL)
qol(sim_x)
mat4 <- matrix(data = c(61,35,1,6),nrow = 2,byrow = T)
colnames(mat4) <- c("Survived","Dead")
rownames(mat4) <- c("Received","Not received")
fisher.test(mat4)
mat5 <- matrix(data = c(59,33,2,2),nrow = 2,byrow = T)
colnames(mat5) <- c("Survived","Dead")
rownames(mat5) <- c("Received within 7 days","Receieved on/after 7 days")
fisher.test(mat5)
mat2 <- matrix(data = c(4,5,5,5,6,7,0,2,3,0,2,1,0,1),nrow = 7,byrow = T)
colnames(mat2) <- c('Females','Males')
rownames(mat2) <- c('0-10','11-20','21-30','31-40','41-50','51-60','>=61')
fisher.test(mat2)
mat2 <- matrix(data = c(4,5,5,5,6,7,0,2,3,0,2,1),nrow = 7,byrow = T)
colnames(mat2) <- c('Females','Males')
rownames(mat2) <- c('0-10','11-20','21-30','31-40','41-50','>=51')
fisher.test(mat2)
library(QOL)
d <- read.csv("F:/BIRAC_Project/Quality_of_Life/Missing_QOL.csv")
miss_qol(d)
library(QOL)
library(QOL)
d <- read.csv("F:/BIRAC_Project/Quality_of_Life/Missing_QOL.csv")
miss_qol(d)
git init
library(QOLMiss)
library(QoLMiss)
library(QoLMiss)
data("sim_x")
qol(sim_x)
head(qol(sim_x))
head(qol(sim_x))
head(qol(sim_x))
head(qol(sim_x))
head(qol(sim_x))
# Load the simulated data
data("sim_x")
# Display head of the scale scores
head(qol(sim_x))
# Load the simulated data
data("sim_x")
# Display head of the scale scores
head(qol(sim_x))
# Load the simulated data
data("sim_x")
# Display head of the scale scores
head(qol(sim_x))
